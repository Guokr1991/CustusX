PROJECT(CustusX3)

cmake_minimum_required(VERSION 2.6)

SET(CustusX3_VERSION_MAJOR	3)
SET(CustusX3_VERSION_MINOR	0)
SET(CustusX3_VERSION_PATCH	6)
SET(VERSION_NUMBER "${CustusX3_VERSION_MAJOR}.${CustusX3_VERSION_MINOR}.${CustusX3_VERSION_PATCH}")
SET(VERSION_NUMBER_VERBOSE "${CustusX3_VERSION_MAJOR}.${CustusX3_VERSION_MINOR}.${CustusX3_VERSION_PATCH}")

#set(CMAKE_INSTALL_RPATH .;${CMAKE_INSTALL_RPATH})
#message(STATUS "CMAKE_INSTALL_RPATH " ${CMAKE_INSTALL_RPATH})

set(CMAKE_INSTALL_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/../install_test/ )

FIND_PACKAGE(Subversion)
IF(Subversion_FOUND)
  Subversion_WC_INFO(${PROJECT_SOURCE_DIR} CustusX3)
  SET(VERSION_NUMBER_VERBOSE "${VERSION_NUMBER_VERBOSE} (${CustusX3_WC_REVISION})")
ENDIF(Subversion_FOUND)
  
SET(VERSION_NUMBER "${VERSION_NUMBER} alpha")
SET(VERSION_NUMBER_VERBOSE "${VERSION_NUMBER_VERBOSE} alpha")

SET(CMAKE_BUILD_TYPE:STRING=Debug)

ADD_DEFINITIONS(-DCustusX3_VERSION_MAJOR=${CustusX3_VERSION_MAJOR}
  -DCustusX3_VERSION_MINOR=${CustusX3_VERSION_MINOR}
  -DCustusX3_VERSION_PATCH=${CustusX3_VERSION_PATCH})

INCLUDE(Dart)

include_directories( /usr/local/include )

# cppunit
find_library(CPPUNIT_LIBRARIES cppunit /opt/local/lib) 

IF (WIN32)
  ADD_DEFINITIONS(-D__WIN32__)
ENDIF (WIN32)

add_subdirectory( externals )
ADD_SUBDIRECTORY ( doc )
ADD_SUBDIRECTORY ( source )

enable_testing()
add_subdirectory(testing)



